pipeline {
    agent any
    environment {
        RECIPIENTS = 'ryhzkghl@sharklasers.com'
    }
    stages {
        stage('Build') {
            steps {
                echo 'Stage 1: Building...'
                echo 'Gradle'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script{
                echo 'Stage 2: Unit and Integration Testing...'
                echo 'JUnit'
                
                def logFile = "${env.WORKSPACE}/build-log.txt"
                writeFile file: logFile, text: currentBuild.rawBuild.getLog(10000).join('\n')

                emailext(
                    subject: "Jenkins Pipeline: ${env.JOB_NAME} [${env.BUILD_NUMBER}] - After Test Stage",
                    body: "Pipeline '${env.JOB_NAME}' has completed the Test stage. See the attached log for details.",
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                    to: "${RECIPIENTS}",
                    attachLog: true,
                    attachmentsPattern: logFile
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Stage 3: Code Analysis...'
                echo 'Checkstyle'
            }
        }

        stage('Security Scan') {
            steps {
                script {
                echo 'Stage 4: Security Scan...'
                echo 'Burp Suite'
                
                def logFile = "${env.WORKSPACE}/build-log.txt"
                writeFile file: logFile, text: currentBuild.rawBuild.getLog(10000).join('\n')

                emailext(
                    subject: "Jenkins Pipeline: ${env.JOB_NAME} [${env.BUILD_NUMBER}] - After Security Scan Stage",
                    body: "Pipeline '${env.JOB_NAME}' has completed the Security Scan stage. See the attached log for details.",
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                    to: "${RECIPIENTS}",
                    attachLog: true,
                    attachmentsPattern: logFile
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Stage 5: Deploying to Staging...'
                echo 'Microsoft Azure'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Stage 6: Integration Tests on Staging...'
                echo 'PyTest'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Stage 7: Deploy to Production...'
                echo 'Azure Kubernetes Service'
            }
        }
    }
}